// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// BookListServiceClient is the client API for BookListService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type BookListServiceClient interface {
	GetBookList(ctx context.Context, in *GetBookListRequest, opts ...grpc.CallOption) (*GetBookListResponse, error)
}

type bookListServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewBookListServiceClient(cc grpc.ClientConnInterface) BookListServiceClient {
	return &bookListServiceClient{cc}
}

func (c *bookListServiceClient) GetBookList(ctx context.Context, in *GetBookListRequest, opts ...grpc.CallOption) (*GetBookListResponse, error) {
	out := new(GetBookListResponse)
	err := c.cc.Invoke(ctx, "/sahansera.gogrpc.BookListService/GetBookList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BookListServiceServer is the server API for BookListService service.
// All implementations must embed UnimplementedBookListServiceServer
// for forward compatibility
type BookListServiceServer interface {
	GetBookList(context.Context, *GetBookListRequest) (*GetBookListResponse, error)
	mustEmbedUnimplementedBookListServiceServer()
}

// UnimplementedBookListServiceServer must be embedded to have forward compatible implementations.
type UnimplementedBookListServiceServer struct {
}

func (UnimplementedBookListServiceServer) GetBookList(context.Context, *GetBookListRequest) (*GetBookListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBookList not implemented")
}
func (UnimplementedBookListServiceServer) mustEmbedUnimplementedBookListServiceServer() {}

// UnsafeBookListServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to BookListServiceServer will
// result in compilation errors.
type UnsafeBookListServiceServer interface {
	mustEmbedUnimplementedBookListServiceServer()
}

func RegisterBookListServiceServer(s grpc.ServiceRegistrar, srv BookListServiceServer) {
	s.RegisterService(&BookListService_ServiceDesc, srv)
}

func _BookListService_GetBookList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBookListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookListServiceServer).GetBookList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sahansera.gogrpc.BookListService/GetBookList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookListServiceServer).GetBookList(ctx, req.(*GetBookListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// BookListService_ServiceDesc is the grpc.ServiceDesc for BookListService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var BookListService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "sahansera.gogrpc.BookListService",
	HandlerType: (*BookListServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetBookList",
			Handler:    _BookListService_GetBookList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "booklist_service.proto",
}
